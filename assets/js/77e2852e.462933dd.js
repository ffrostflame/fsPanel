"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[315],{6254:e=>{e.exports=JSON.parse('{"functions":[{"name":"init","desc":"Initialization function. Starts & creates the fsPanel client-sided UI- determining which users are authorized, and which ones aren\'t.\\n```lua\\nlocal fsPanel = require(path.to.fsPanel)\\n\\nfsPanel.Client.init({\\n\\ttoggleKeys = { Enum.KeyCode.F1 }\\n})\\n```","params":[{"name":"clientConfig","desc":"","lua_type":"clientConfig"}],"returns":[{"desc":"","lua_type":"void"}],"function_type":"static","source":{"line":45,"path":"src/Client/init.luau"}}],"properties":[],"types":[{"name":"clientConfig","desc":"\\ttoggleKeys: {\\n\\t\\t[number]: Enum.KeyCode\\n\\t}\\n}\\n\\nConfiguration for `fsPanel.Server.init()`\\nExample:\\n```lua\\nlocal clientConfiguration = {\\n\\ttoggleKeys = {\\n\\t\\tEnum.KeyCode.F2\\n\\t}\\n}\\n```","lua_type":"{","source":{"line":28,"path":"src/Client/init.luau"}}],"name":"Client","desc":"The root namespace for all the exposed client functions in fsPanel.","source":{"line":9,"path":"src/Client/init.luau"}}')}}]);